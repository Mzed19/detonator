[
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Api",
        "importPath": "flask_smorest",
        "description": "flask_smorest",
        "isExtraImport": true,
        "detail": "flask_smorest",
        "documentation": {}
    },
    {
        "label": "Blueprint",
        "importPath": "flask_smorest",
        "description": "flask_smorest",
        "isExtraImport": true,
        "detail": "flask_smorest",
        "documentation": {}
    },
    {
        "label": "main_bp",
        "importPath": "core",
        "description": "core",
        "isExtraImport": true,
        "detail": "core",
        "documentation": {}
    },
    {
        "label": "Cache",
        "importPath": "flask_caching",
        "description": "flask_caching",
        "isExtraImport": true,
        "detail": "flask_caching",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app = Flask(__name__)\ncache = Cache(app)\napp.config[\"PROPAGATE_EXCEPTIONS\"] = True\napp.config[\"API_TITLE\"] = \"Scraper\"\napp.config[\"API_VERSION\"] = \"v1\"\napp.config[\"OPENAPI_VERSION\"] = \"3.0.3\"\napp.config[\"OPENAPI_URL_PREFIX\"] = \"/\"\napi = Api(app)\napi.register_blueprint(main_bp)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "cache",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "cache = Cache(app)\napp.config[\"PROPAGATE_EXCEPTIONS\"] = True\napp.config[\"API_TITLE\"] = \"Scraper\"\napp.config[\"API_VERSION\"] = \"v1\"\napp.config[\"OPENAPI_VERSION\"] = \"3.0.3\"\napp.config[\"OPENAPI_URL_PREFIX\"] = \"/\"\napi = Api(app)\napi.register_blueprint(main_bp)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app.config[\"PROPAGATE_EXCEPTIONS\"]",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app.config[\"PROPAGATE_EXCEPTIONS\"] = True\napp.config[\"API_TITLE\"] = \"Scraper\"\napp.config[\"API_VERSION\"] = \"v1\"\napp.config[\"OPENAPI_VERSION\"] = \"3.0.3\"\napp.config[\"OPENAPI_URL_PREFIX\"] = \"/\"\napi = Api(app)\napi.register_blueprint(main_bp)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app.config[\"API_TITLE\"]",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app.config[\"API_TITLE\"] = \"Scraper\"\napp.config[\"API_VERSION\"] = \"v1\"\napp.config[\"OPENAPI_VERSION\"] = \"3.0.3\"\napp.config[\"OPENAPI_URL_PREFIX\"] = \"/\"\napi = Api(app)\napi.register_blueprint(main_bp)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app.config[\"API_VERSION\"]",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app.config[\"API_VERSION\"] = \"v1\"\napp.config[\"OPENAPI_VERSION\"] = \"3.0.3\"\napp.config[\"OPENAPI_URL_PREFIX\"] = \"/\"\napi = Api(app)\napi.register_blueprint(main_bp)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app.config[\"OPENAPI_VERSION\"]",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app.config[\"OPENAPI_VERSION\"] = \"3.0.3\"\napp.config[\"OPENAPI_URL_PREFIX\"] = \"/\"\napi = Api(app)\napi.register_blueprint(main_bp)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app.config[\"OPENAPI_URL_PREFIX\"]",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app.config[\"OPENAPI_URL_PREFIX\"] = \"/\"\napi = Api(app)\napi.register_blueprint(main_bp)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "api",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "api = Api(app)\napi.register_blueprint(main_bp)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "test",
        "kind": 2,
        "importPath": "core",
        "description": "core",
        "peekOfCode": "def test():\n    global informationsOfTarget\n    informationsOfTarget = request.get_json()\n    return jsonify(informationsOfTarget)\n@main_bp.route('/test2', methods=['GET'])\ndef test2():\n    return jsonify(informationsOfTarget)",
        "detail": "core",
        "documentation": {}
    },
    {
        "label": "test2",
        "kind": 2,
        "importPath": "core",
        "description": "core",
        "peekOfCode": "def test2():\n    return jsonify(informationsOfTarget)",
        "detail": "core",
        "documentation": {}
    },
    {
        "label": "main_bp",
        "kind": 5,
        "importPath": "core",
        "description": "core",
        "peekOfCode": "main_bp = Blueprint(\"test\", __name__, description=\"Initial test\")\ninformationsOfTarget = {}\n@main_bp.route('/save', methods=['POST'])\ndef test():\n    global informationsOfTarget\n    informationsOfTarget = request.get_json()\n    return jsonify(informationsOfTarget)\n@main_bp.route('/test2', methods=['GET'])\ndef test2():\n    return jsonify(informationsOfTarget)",
        "detail": "core",
        "documentation": {}
    },
    {
        "label": "informationsOfTarget",
        "kind": 5,
        "importPath": "core",
        "description": "core",
        "peekOfCode": "informationsOfTarget = {}\n@main_bp.route('/save', methods=['POST'])\ndef test():\n    global informationsOfTarget\n    informationsOfTarget = request.get_json()\n    return jsonify(informationsOfTarget)\n@main_bp.route('/test2', methods=['GET'])\ndef test2():\n    return jsonify(informationsOfTarget)",
        "detail": "core",
        "documentation": {}
    }
]